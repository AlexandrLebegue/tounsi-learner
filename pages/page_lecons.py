import streamlit as st
import pandas as pd
import streamlit_antd_components as sac
import streamlit as st
from pages import menu_sidebar
import random

st.session_state["current_page"] = "Le√ßons"
menu_sidebar.show_menu()

def load_prononciation():
    st.write("# üó£Ô∏è Guide de Prononciation Tunisienne")
    
    # Introduction
    st.write("""
    La prononciation tunisienne a ses particularit√©s uniques! 
    D√©couvrez comment ma√Ætriser les sons sp√©ciaux du dialecte tunisien.
    """)
    
    # Sons sp√©ciaux avec chiffres
    st.write("## üî¢ Sons Sp√©ciaux (Notation avec chiffres)")
    special_sounds = {
        'Chiffre': ['3', '7', '9', '5', '8'],
        'Son': ['ÿπ', 'ÿ≠', 'ŸÇ', 'ÿÆ', 'ÿ∫'],
        'Description': [
            'Son guttural "ain"',
            'H fort du fond de la gorge',
            'Q dur/profond',
            'Comme la jota espagnole',
            'R grassey√©/gargaris√©'
        ],
        'Exemple': [
            '3aslema (Bonjour)',
            '7lowa (Belle/Bon)',
            '9ahwa (Caf√©)',
            '5obz (Pain)',
            '8ali (Cher)'
        ]
    }
    st.dataframe(pd.DataFrame(special_sounds))
    
    # Section interactive des sons
    st.write("## üéØ Pratique des Sons")
    son = st.selectbox(
        "Choisissez un son √† pratiquer:",
        ["3 (ain)", "7 (H fort)", "9 (Q dur)", "5 (Kh)", "8 (Gh)"]
    )
    
    # Afficher des exemples selon le son choisi
    exemples_sons = {
        "3 (ain)": {
            "Mots simples": ["3ayn (≈ìil)", "3sel (miel)", "3am (ann√©e)"],
            "Conseil": "Imaginez faire le son 'a' en ouvrant bien la gorge"
        },
        "7 (H fort)": {
            "Mots simples": ["7out (poisson)", "7lib (lait)", "7ar (√©pic√©)"],
            "Conseil": "Comme un H aspir√© tr√®s fort, comme quand on souffle sur des lunettes"
        },
        "9 (Q dur)": {
            "Mots simples": ["9alb (c≈ìur)", "9rib (proche)", "9dim (ancien)"],
            "Conseil": "Comme un K mais prononc√© plus profond√©ment dans la gorge"
        },
        "5 (Kh)": {
            "Mots simples": ["5obz (pain)", "5ali (mon oncle)", "5ir (bien)"],
            "Conseil": "Comme la jota espagnole dans 'Juan' ou le ch allemand dans 'Bach'"
        },
        "8 (Gh)": {
            "Mots simples": ["8ali (cher)", "8ada (d√©jeuner)", "8ar (grotte)"],
            "Conseil": "Comme un R grassey√© fran√ßais mais plus guttural"
        }
    }
    
    st.write("### üìù Exemples et conseils")
    for mot in exemples_sons[son]["Mots simples"]:
        st.write(f"‚Ä¢ {mot}")
    st.info(f"üí° Conseil: {exemples_sons[son]['Conseil']}")
    
    # Voyelles et diphtongues
    st.write("## üî§ Voyelles et Diphtongues")
    vowels_data = {
        'Son': ['a', 'i', 'ou', 'ay', 'aw'],
        'Comme en fran√ßais': [
            'papa',
            'lit',
            'bout',
            'a√Øe',
            'au'
        ],
        'Exemple tunisien': [
            'dar (maison)',
            'bib (porte)',
            'soug (march√©)',
            'zaytoun (olive)',
            'mawjoud (pr√©sent)'
        ]
    }
    st.dataframe(pd.DataFrame(vowels_data))
    
    # Section r√®gles de prononciation
    st.write("## üìö R√®gles Principales")
    rules = {
        "Accentuation": """
        - L'accent est g√©n√©ralement sur l'avant-derni√®re syllabe
        - Les mots courts sont souvent accentu√©s sur la premi√®re syllabe
        """,
        "Assimilation": """
        - Le 'l' de l'article 'el' s'assimile aux lettres solaires
        - Exemple: el + dar ‚Üí ed-dar (la maison)
        """,
        "√âlision": """
        - Les voyelles courtes peuvent dispara√Ætre en parole rapide
        - Exemple: ki(f) wash ‚Üí kwash (comment)
        """
    }
    
    rule_choice = st.selectbox("Choisissez une r√®gle:", list(rules.keys()))
    st.write(rules[rule_choice])
    
    # Exercice pratique
    st.write("## ‚úçÔ∏è Exercice de Prononciation")
    phrases = [
        "3aslema ya 7bibi",
        "9ahwa bel 7lib",
        "5obz w zaytoun",
        "8ali barcha",
        "Taw nemchiw lel soug"
    ]
    phrase = st.selectbox("Choisissez une phrase √† pratiquer:", phrases)
    
    if st.button("Analyser la prononciation"):
        st.write("### üîç Analyse par syllabe:")
        # Exemple avec la premi√®re phrase
        if phrase == "3aslema ya 7bibi":
            st.write("""
            1. **3as** - commencez par le son guttural '3'
            2. **le** - syllabe simple
            3. **ma** - syllabe finale ouverte
            4. **ya** - liaison douce
            5. **7bi** - attention au 'H' fort
            6. **bi** - terminaison simple
            """)
    
    # Conseils de pratique
    st.write("## üí° Conseils de pratique")
    st.success("""
    1. √âcoutez beaucoup de tunisien (musique, films, s√©ries)
    2. Pratiquez les sons difficiles isol√©ment
    3. Enregistrez-vous pour comparer
    4. Commencez par des mots courts
    5. N'ayez pas peur de faire des erreurs!
    """)
    
    # Variations r√©gionales
    st.write("## üó∫Ô∏è Variations R√©gionales")
    with st.expander("Voir les variations"):
        st.write("""
        - **Tunis** : Prononciation plus "douce", influence fran√ßaise
        - **Sfax** : Prononciation plus "dure", conservation des sons traditionnels
        - **Sousse** : Entre les deux, plus m√©lodique
        - **Sud** : Conservation de sons b√©douins traditionnels
        """)
def load_conjugaison():
    # Section Conjugaison
    st.write("# üìñ Conjugaison")
    st.write("""
        En tunisien, la conjugaison est souvent simplifi√©e par rapport √† l'arabe classique! 
    """)

    verbs_data = {
    'Pronom': ['Ana (Je)', 'Inti (Tu)', 'Huwa (Il)', 'Hiya (Elle)', 
            'Ahna (Nous)', 'Intouma (Vous)', 'Houma (Ils/Elles)'],
    'Manger (Yekol)': ['Nekol', 'Tekol', 'Yekol', 'Tekol', 
                    'Neklo', 'Teklo', 'Yeklo'],
    'Parler (Yahki)': ['Nahki', 'Tahki', 'Yahki', 'Tahki', 
                    'Nahkio', 'Tahkio', 'Yahkio'],
    'Faire (Y3mel)': ['N3mel', 'T3mel', 'Y3mel', 'T3mel', 
                    'N3amlo', 'T3amlo', 'Y3amlo']
    }

    
    st.dataframe(pd.DataFrame(verbs_data))
    st.write(" **Quiz Time** ")
    # Quiz conjugaison
    verbe = st.radio( 
        "Comment on √©crit 'nous mangeons' ?",
        ('Neklo', 'Tekol', 'N3mel'), index = None
    )
    
    if verbe is not None:
        if verbe == 'y3ml':
            st.success("Bonne r√©ponse ! üéâ 'y3ml' est le verbe tunisien pour 'faire'.")
        else:
            st.error("Oups, essaye encore ! üòÖ")
    
def load_pronoms_personnels():
    st.write("# üë• Les Pronoms Personnels")
    
    # Introduction
    st.write("""
    Les pronoms personnels sont essentiels dans le dialecte tunisien. 
    Contrairement au fran√ßais, ils sont presque toujours exprim√©s dans la phrase 
    et ont quelques particularit√©s int√©ressantes!
    """)
    
    # Tableau principal des pronoms
    st.write("## üìä Tableau des Pronoms")
    pronoms_data = {
        'Pronom (FR)': ['Je', 'Tu (m)', 'Tu (f)', 'Il', 'Elle', 'Nous', 'Vous', 'Ils/Elles'],
        'Pronom (TN)': ['Ana', 'Inti/Inta', 'Inti', 'Huwa', 'Hiya', '7na', 'Intuma', 'Huma'],
        'Exemple': [
            'Ana fi dar (Je suis √† la maison)',
            'Inti/Inta win? (Tu es o√π?)',
            'Inti mchi3a? (Tu pars?)',
            'Huwa yemchi (Il part)',
            'Hiya temchi (Elle part)',
            '7na mchina (Nous sommes partis)',
            'Intuma win? (Vous √™tes o√π?)',
            'Huma yemchiw (Ils partent)'
        ],
        'Prononciation': [
            'A-na',
            'In-ti/In-ta',
            'In-ti',
            'Hou-wa',
            'Hi-ya',
            'H-na',
            'In-tou-ma',
            'Hou-ma'
        ]
    }
    st.dataframe(pd.DataFrame(pronoms_data))
    
    # Section des formes possessives
    st.write("## üéØ Pronoms Possessifs")
    possessifs_data = {
        'Base': ['Mon/Ma', 'Ton/Ta', 'Son/Sa', 'Notre', 'Votre', 'Leur'],
        'Suffixe': ['-i', '-ek', '-ou/-ha', '-na', '-kom', '-hom'],
        'Exemple': [
            'Dari (Ma maison)',
            'Darek (Ta maison)',
            'Darou/Darha (Sa maison)',
            'Darna (Notre maison)',
            'Darkom (Votre maison)',
            'Darhom (Leur maison)'
        ]
    }
    st.dataframe(pd.DataFrame(possessifs_data))
    
    # Section interactive
    st.write("## üéÆ Pratique Interactive")
    
    # Choix de cat√©gorie
    categorie = st.radio(
        "Choisissez une cat√©gorie √† pratiquer:",
        ["Pronoms Sujets", "Pronoms Possessifs", "Combinaisons"]
    )
    
    if categorie == "Pronoms Sujets":
        st.write("### üéØ Exercice: Compl√©tez avec le bon pronom")
        situations = {
            "_____ mchi lel souk": "Qui va au march√©?",
            "_____ takel pizza": "Qui mange une pizza?",
            "_____ te7ki fran√ßais?": "Qui parle fran√ßais?"
        }
        situation = st.selectbox("Choisissez une phrase √† compl√©ter:", list(situations.keys()))
        reponse = st.text_input("Votre r√©ponse:")
        if st.button("V√©rifier"):
            st.write("üí° Plusieurs r√©ponses sont possibles! Par exemple:")
            pronoms_possibles = {
                "Ana": "Je",
                "Inti": "Tu",
                "Huwa": "Il",
                "Hiya": "Elle"
            }
            for pronom, trad in pronoms_possibles.items():
                st.write(f"‚Ä¢ {pronom} ({trad})")

    elif categorie == "Pronoms Possessifs":
        st.write("### üè† Exercice: Les possessions")
        objets = ["dar (maison)", "kteb (livre)", "telephone", "sayara (voiture)"]
        objet = st.selectbox("Choisissez un objet:", objets)
        st.write("Comment dire 'mon/ma' + cet objet?")
        if st.button("Voir la r√©ponse"):
            objet_base = objet.split(" ")[0]
            st.success(f"{objet_base}i")
            st.info("Ajoutez simplement 'i' √† la fin du mot!")
            
    else:  # Combinaisons
        st.write("### üîÑ Combinez les pronoms")
        st.write("Comment combiner les pronoms dans une phrase?")
        exemple = st.selectbox(
            "Choisissez un exemple:",
            [
                "Ana w inti (Moi et toi)",
                "7na w huma (Nous et eux)",
                "Inti w huwa (Toi et lui)"
            ]
        )
        if st.button("Plus d'explications"):
            st.info("""
            En tunisien, la combinaison de pronoms est simple:
            - Utilisez 'w' (et) entre les pronoms
            - L'ordre est souvent du plus proche au plus lointain
            - Le verbe s'accorde avec le groupe entier
            """)
    
    # Astuces et particularit√©s
    st.write("## üí° Astuces importantes")
    with st.expander("Voir les astuces"):
        st.write("""
        1. **Genre**: Le 'tu' a deux formes en tunisien (masculin/f√©minin)
        2. **Usage**: Les pronoms sont rarement omis contrairement au fran√ßais
        3. **Position**: Le pronom vient g√©n√©ralement avant le verbe
        4. **Politesse**: 'Intuma' peut √™tre utilis√© par politesse avec une personne
        5. **Combinaison**: On peut combiner les pronoms avec 'w' (et)
        """)
    
    # Section culturelle
    st.write("## üé≠ Aspect Culturel")
    st.info("""
    Dans la culture tunisienne, l'usage des pronoms refl√®te le respect et la hi√©rarchie sociale:
    - Les jeunes utilisent 'intuma' avec les a√Æn√©s par respect
    - Entre amis du m√™me √¢ge, on utilise 'inti/inta'
    - Avec les personnes √¢g√©es, on peut ajouter '3ammi/khalti' (oncle/tante) avant le pronom
    """)
    
    # Quiz final
    st.write("## üéØ Quiz Rapide")
    if st.button("Commencer le quiz"):
        questions = [
            "Comment dit-on 'Je' en tunisien?",
            "Quelle est la diff√©rence entre 'inti' et 'inta'?",
            "Comment forme-t-on un possessif?",
            "Comment dit-on 'leur maison'?"
        ]
        q = random.choice(questions)
        st.write(f"Question: {q}")
        st.text_input("Votre r√©ponse:")
def load_nombres():
    # Section Nombres
    st.write("# üî¢ Nombres ")
    numbers_data = {
        'Nombre': list(range(0, 11)),
        'En tunisien': ['Sfar', 'Wahed', 'Zouz', 'Tleta', 'Arba', 'Khamsa', 
                    'Setta', 'Seba', 'Tmenja', 'Tesaa', 'Achra']
    }
    
    st.dataframe(pd.DataFrame(numbers_data))
    
    st.write("**R√®gles sp√©ciales ‚ö†Ô∏è**")
    st.write("""
    - Pour 11-19: Ajoutez '-ach' au nombre de base
    - Pour les dizaines: 20 (Aachrin), 30 (Tlethin), 40 (Arbain)
    - Pour composer: 21 = Wahed w aachrin
    """)

    # Afficher un exemple de nombre
    number = st.selectbox(
        "Choisissez un nombre en tunisien :",
        ['1', '5', '10', '100']
    )

    if number == '1':
        st.write("Le nombre 1 en tunisien est 'wa7ed'.")
    elif number == '5':
        st.write("Le nombre 5 en tunisien est 'khamsa'.")
    elif number == '10':
        st.write("Le nombre 10 en tunisien est '3ashra'.")
    else:
        st.write("Le nombre 100 en tunisien est 'miya'.")

def load_grammaire():
    st.write("# üìñ Grammaire de Base du Tunisien")
    
    # Introduction
    st.write("""
    D√©couvrez les r√®gles de base de la grammaire tunisienne! 
    Le dialecte tunisien est une version simplifi√©e de l'arabe classique, 
    avec des influences du fran√ßais, de l'italien et du berb√®re.
    """)
    
    # Sections de grammaire
    sections = st.selectbox(
        "Choisissez une section :",
        ["Pronoms", "Verbes", "Formation des phrases", "N√©gation", "Questions"]
    )
    
    if sections == "Pronoms":
        st.write("## üë§ Les Pronoms Personnels")
        pronoms_data = {
            'Fran√ßais': ['Je', 'Tu (masc.)', 'Tu (f√©m.)', 'Il', 'Elle', 'Nous', 'Vous', 'Ils/Elles'],
            'Tunisien': ['Ana', 'Inti (m)', 'Inti (f)', 'Huwa', 'Hiya', '7na', 'Intuma', 'Huma'],
            'Exemple': [
                'Ana nemchi (Je vais)',
                'Inti temchi (Tu vas)',
                'Inti temchi (Tu vas)',
                'Huwa yemchi (Il va)',
                'Hiya temchi (Elle va)',
                '7na nemchiw (Nous allons)',
                'Intuma temchiw (Vous allez)',
                'Huma yemchiw (Ils/Elles vont)'
            ]
        }
        st.dataframe(pd.DataFrame(pronoms_data))
        
        st.info("""
        üí° Astuce: Contrairement au fran√ßais, en tunisien:
        - Le pronom est souvent obligatoire
        - Il existe une distinction entre tu masculin et f√©minin
        """)
        
    elif sections == "Verbes":
        st.write("## ‚ö° Les Verbes")
        
        # Temps des verbes
        st.write("### üïí Les Temps principaux")
        temps_data = {
            'Temps': ['Pr√©sent', 'Pass√©', 'Futur'],
            'Formation': [
                'Pr√©fixe n/t/y + verbe',
                'Verbe + t/it',
                'Bech + pr√©sent'
            ],
            'Exemple': [
                'nemchi (je vais)',
                'mchit (je suis all√©)',
                'bech nemchi (je vais aller)'
            ]
        }
        st.dataframe(pd.DataFrame(temps_data))
        
        # Verbes courants
        st.write("### üìù Verbes courants")
        verbes = {
            'mcha': 'aller',
            'kla': 'manger',
            'chreb': 'boire',
            'raked': 'dormir',
            '7eb': 'aimer/vouloir'
        }
        for verbe, trad in verbes.items():
            st.write(f"‚Ä¢ **{verbe}** - {trad}")
            
    elif sections == "Formation des phrases":
        st.write("## üî® Formation des Phrases")
        st.write("""
        La structure de base est : **Sujet + Verbe + Compl√©ment**
        
        Exemples:
        - Ana nemchi lel dar (Je vais √† la maison)
        - Hiya takel pizza (Elle mange une pizza)
        - 7na n7ebou el bhar (Nous aimons la mer)
        """)
        
        st.success("""
        üîë Points cl√©s:
        1. L'ordre des mots est similaire au fran√ßais
        2. Les articles sont simplifi√©s (el = le/la/les)
        3. Pas de conjugaison complexe comme en arabe classique
        """)
        
    elif sections == "N√©gation":
        st.write("## ‚ùå La N√©gation")
        st.write("""
        Pour former la n√©gation en tunisien, on utilise:
        **ma... ch** autour du verbe ou de l'adjectif
        """)
        
        negation_examples = {
            'Affirmatif': ['Nemchi', 'N7eb', 'Naaref', 'Behi'],
            'N√©gatif': ['Mamchich', 'Ma7ebch', 'Manarefch', 'Mabehi ch'],
            'Traduction': [
                'Je ne vais pas',
                'Je ne veux pas',
                'Je ne sais pas',
                'Ce n\'est pas bien'
            ]
        }
        st.dataframe(pd.DataFrame(negation_examples))
        
    else:  # Questions
        st.write("## ‚ùì Les Questions")
        st.write("### Mots interrogatifs courants:")
        
        questions_data = {
            'Tunisien': ['Chkoun?', 'Chnowa?', 'Win?', '9addech?', 'Ki/eh?', '3lech?'],
            'Fran√ßais': ['Qui?', 'Quoi?', 'O√π?', 'Combien?', 'Comment?', 'Pourquoi?'],
            'Exemple': [
                'Chkoun inti? (Qui es-tu?)',
                'Chnowa t7eb? (Que veux-tu?)',
                'Win mchit? (O√π es-tu all√©?)',
                '9addech el wa9t? (Quelle heure est-il?)',
                'Kifech inti? (Comment vas-tu?)',
                '3lech ma jitch? (Pourquoi n\'es-tu pas venu?)'
            ]
        }
        st.dataframe(pd.DataFrame(questions_data))
    
    # Section pratique interactive
    st.write("## üéØ Pratiquons!")
    
    # Mini exercice selon la section
    st.write("### ‚úçÔ∏è Exercice")
    if st.button("G√©n√©rer un exercice"):
        exercices = {
            "Pronoms": [
                "Traduisez: Je suis fatigu√©",
                "Comment dire: Nous allons au march√©",
                "Conjuguez: √™tre content (fer7an) avec tous les pronoms"
            ],
            "Verbes": [
                "Conjuguez 'mcha' au pr√©sent",
                "Mettez 'kla' au futur",
                "Donnez le pass√© de '7eb'"
            ],
            "Formation des phrases": [
                "Formez une phrase avec: dar (maison) + kbira (grande)",
                "Traduisez: Le chat dort dans le jardin",
                "Cr√©ez une phrase avec: ana + 7eb + mchi"
            ],
            "N√©gation": [
                "Mettez √† la forme n√©gative: 'Ana n7eb el birra'",
                "Comment dire: Je ne veux pas dormir",
                "Niez la phrase: 'El jow behi'"
            ],
            "Questions": [
                "Posez une question sur l'heure",
                "Demandez 'o√π habites-tu?'",
                "Formez une question avec 'chkoun'"
            ]
        }
        st.write(random.choice(exercices[sections]))
        
    # Astuces culturelles
    st.write("## üé≠ Note culturelle")
    cultural_notes = {
        "Pronoms": "Le vouvoiement est moins utilis√© qu'en fran√ßais, mais reste important avec les personnes √¢g√©es.",
        "Verbes": "Les Tunisiens m√©langent souvent des verbes fran√ßais tunisifi√©s dans leurs phrases.",
        "Formation des phrases": "Le tunisien est tr√®s expressif, n'h√©sitez pas √† utiliser des gestes!",
        "N√©gation": "La n√©gation peut √™tre renforc√©e avec 'khaled' pour dire 'pas du tout'.",
        "Questions": "L'intonation est tr√®s importante dans les questions tunisiennes."
    }
    st.info(cultural_notes[sections])

def load_vocabulaire_de_base():
    # Section Vocabulaire de Base
    st.write("# üìö Vocabulaire de Base")
    st.write("**üìÖ Tableau r√©capitulatif**")
    # Cr√©ation du dictionnaire de vocabulaire
    vocab_data = {
        'Fran√ßais': [
            'Bonjour', 
            'Au revoir', 
            'Comment √ßa va?',
            'Merci',
            'S\'il vous pla√Æt',
            'Oui',
            'Non',
            'Je m\'appelle...',
            'Enchant√©(e)',
            'Je ne comprends pas'
        ],
        'Tunisien': [
            'Aslema',
            'Besslema',
            'Chneya 7welek?',
            'Yaichek',
            'Min fadhlek',
            'Ih',
            'Le',
            'Ismi...',
            'Metcharfin',
            'Manefhemch'
        ],
        'Prononciation': [
            'As-le-ma',
            'Bes-le-ma',
            'Shney-ya hwel-ek',
            'Yai-chek',
            'Min fadh-lek',
            'Ih',
            'Le',
            'Is-mi',
            'Met-char-fin',
            'Ma-nef-hemch'
        ]
    }
    
    # Affichage du tableau de vocabulaire
    st.dataframe(pd.DataFrame(vocab_data))
    
    # Section des r√®gles de base
    st.write("**üìù R√®gles de base**")
    st.write("""
    - Le dialecte tunisien utilise souvent des sons qui n'existent pas en fran√ßais
    - Les chiffres sont parfois utilis√©s pour repr√©senter des sons particuliers:
        * 7 = son 'H' fort
        * 3 = son 'A' guttural
        * 9 = son 'Q' guttural
    """)
    
    # Section interactive
    categorie = st.selectbox(
        "Choisissez une cat√©gorie de phrases :",
        ['Salutations', 'Expressions courantes', 'Questions basiques']
    )
    
    if categorie == 'Salutations':
        st.write("""
        üåÖ **Le matin:** "Sbe7 el khir" (Bonjour)
        üåô **Le soir:** "Mse el khir" (Bonsoir)
        """)
    elif categorie == 'Expressions courantes':
        st.write("""
        üëç **D'accord:** "Mriguel"
        üòä **Tr√®s bien:** "Behi barcha"
        üôè **De rien:** "L√© chwey"
        """)
    else:
        st.write("""
        ü§î **O√π est...?:** "Win...?"
        üí∞ **Combien √ßa co√ªte?:** "9addech?"
        üïí **Quelle heure est-il?:** "9addech fel wa9t?"
        """)
    
    # Astuce du jour
    st.write("üí° **Astuce du jour**")
    st.info("""
    En tunisien, on ajoute souvent 'ch' √† la fin des verbes pour les rendre n√©gatifs.
    Exemple: 
    - "Nefhem" (Je comprends) 
    - "Manefhemch" (Je ne comprends pas)
    """)


def load_expressions_courantes():
    st.write("# üéØ Expressions Courantes")
    
    # Introduction amusante
    st.write("""
    D√©couvrez les expressions qui vous feront parler comme un vrai Tunisien! 
    Ces phrases sont utilis√©es quotidiennement dans les rues de Tunis, Sfax, ou Sousse üáπüá≥
    """)
    
    # Sections d'expressions par cat√©gorie
    categories = {
        "üòä Expressions positives": {
            "3aslema": "Tout va bien (litt√©ralement: c'est du miel)",
            "Mabrouk": "F√©licitations",
            "3ala rouhek": "Tu es g√©nial (litt√©ralement: sur ton √¢me)",
            "Taw taw": "D'accord, tout de suite!",
            "Mriguel": "C'est cool, √ßa roule"
        },
        "üò§ Expressions d'agacement": {
            "Ya hasra": "Quel dommage!",
            "Yezi barka": "Arr√™te, √ßa suffit!",
            "Ya latif": "Oh mon Dieu! (expression d'exasp√©ration)",
            "Mela aya": "Alors quoi encore?",
            "Chnoua hedha": "C'est quoi ce truc?"
        },
        "ü§£ Expressions dr√¥les": {
            "Mahlek": "Que tu es beau/belle! (avec ironie possible)",
            "Sahbi rabbi yehfdek": "Mon ami que Dieu te prot√®ge (utilis√© pour tout et n'importe quoi)",
            "Weldek ma3adech yekber": "Ton fils ne grandira plus (quand quelqu'un fait quelque chose de bien)",
            "3andek chwaya mokh?": "As-tu un peu de cerveau? (gentille moquerie)",
            "Wallah la3dhim": "Je te jure! (utilis√© m√™me pour les plus petites choses)"
        }
    }
    
    # S√©lection de cat√©gorie interactive
    category = st.selectbox("Choisissez une cat√©gorie:", list(categories.keys()))
    
    # Affichage des expressions de la cat√©gorie s√©lectionn√©e
    selected_expressions = categories[category]
    expressions_df = pd.DataFrame({
        'Expression': list(selected_expressions.keys()),
        'Signification': list(selected_expressions.values())
    })
    st.dataframe(expressions_df)
    
    # Section interactive - Testez vos connaissances
    st.write("## üéÆ Testez vos connaissances!")
    
    # Quiz simple
    quiz_expression = st.selectbox(
        "Que signifie cette expression?",
        list(selected_expressions.keys())
    )
    
    if st.button("Voir la r√©ponse"):
        st.success(f"üéâ R√©ponse: {selected_expressions[quiz_expression]}")
    
    # Section des situations courantes
    st.write("## üé≠ Situations courantes")
    situations = {
        "Au caf√©": [
            "3andi kahwa bel 7lib - Un caf√© au lait s'il vous pla√Æt",
            "Zidli chwaya sukkar - Ajoutez-moi un peu de sucre",
            "9addech? - C'est combien?"
        ],
        "Au march√©": [
            "Ghali barcha! - C'est trop cher!",
            "Na9es chwaya - Baisse un peu le prix",
            "Aka7el 3liya - Fais-moi un bon prix"
        ],
        "Entre amis": [
            "Nemchiw nel3bou ballon? - On va jouer au foot?",
            "Tji tel3ab m3ana? - Tu viens jouer avec nous?",
            "Chbik mafamech? - Pourquoi tu n'es pas venu?"
        ]
    }
    
    situation = st.selectbox("Choisissez une situation:", list(situations.keys()))
    for phrase in situations[situation]:
        st.write(f"‚Ä¢ {phrase}")
    
    # Conseils d'utilisation
    st.write("## üí° Conseils d'utilisation")
    st.info("""
    - Les expressions tunisiennes sont tr√®s contextuelles
    - Le ton est aussi important que les mots
    - N'h√©sitez pas √† utiliser les gestes pour accompagner vos expressions
    - Les Tunisiens appr√©cient beaucoup quand les √©trangers essaient de parler leur dialecte!
    """)
    
    # Easter Egg
    if st.button("üéÅ D√©couvrez une expression secr√®te!"):
        expressions_secretes = [
            "Chkoun ya7ki 3lik? - Qui parle de toi? (Quand quelqu'un √©ternue)",
            "3andek fil ! - Tu as un √©l√©phant! (Quand quelqu'un a de la chance)",
            "Koul 3am w inti b'khir - Que chaque ann√©e te trouve en bonne sant√©",
            "Saret sa3a - √áa fait une heure! (M√™me si √ßa fait 5 minutes)"
        ]
        st.success(random.choice(expressions_secretes))
    
    # Niveau de ma√Ætrise
    st.write("## üìä √âvaluez votre niveau")
    niveau = st.slider("Combien d'expressions connaissez-vous?", 0, 20)
    
    if niveau < 5:
        st.write("üå± D√©butant - Continuez √† pratiquer!")
    elif niveau < 10:
        st.write("üåø Interm√©diaire - Vous commencez √† bien vous d√©brouiller!")
    elif niveau < 15:
        st.write("üå≥ Avanc√© - Presque un Tunisien!")
    else:
        st.write("üé≠ Expert - Vous √™tes un vrai Tunisien maintenant!")
def load_formes_de_politesse():
    st.write("# üé≠ Formes de Politesse en Tunisien")
    
    # Introduction
    st.write("""
    La politesse est un aspect fondamental de la culture tunisienne. 
    D√©couvrez comment √™tre poli et respectueux en dialecte tunisien!
    """)
    
    # Salutations de base
    st.write("## üëã Salutations de Base")
    salutations_data = {
        'Situation': ['Matin', 'Apr√®s-midi', 'Soir', 'G√©n√©ral', 'D√©part'],
        'Expression': [
            'Sbe7 el khir',
            'Messa el khir',
            'Tusbah 3ala khir',
            'Aslema / Slem',
            'Besslema'
        ],
        'R√©ponse': [
            'Sbe7 ennour',
            'Messa ennour',
            'Winti men ahlou',
            'Aslema / Slem',
            'Allah yselmek'
        ],
        'Usage': [
            'Le matin jusqu\'√† 12h',
            'De 12h au coucher du soleil',
            'Avant d\'aller dormir',
            '√Ä tout moment',
            'En partant'
        ]
    }
    st.dataframe(pd.DataFrame(salutations_data))
    
    # Formules de respect
    st.write("## üôè Formules de Respect")
    respect_data = {
        'Situation': [
            'Personnes √¢g√©es',
            'Parents',
            'Professeurs',
            'Inconnus',
            'Commer√ßants'
        ],
        'Terme': [
            '3ammi/khalti',
            'Weldek/Bintek',
            'Sidi/Lella',
            'Si/Siti',
            'Haj/Haja'
        ],
        'Utilisation': [
            'Pour s\'adresser aux personnes √¢g√©es (oncle/tante)',
            'Pour montrer du respect aux parents d\'autres',
            'Pour s\'adresser aux enseignants',
            'Pour s\'adresser poliment √† un inconnu',
            'Pour les personnes ayant fait le p√®lerinage ou √¢g√©es'
        ]
    }
    st.dataframe(pd.DataFrame(respect_data))
    
    # Section interactive
    st.write("## üéÆ Situations Pratiques")
    situation = st.selectbox(
        "Choisissez une situation:",
        [
            "Rencontrer quelqu'un pour la premi√®re fois",
            "Demander poliment un service",
            "Remercier quelqu'un",
            "S'excuser",
            "Prendre cong√©"
        ]
    )
    
    # Dictionnaire des situations
    situations = {
        "Rencontrer quelqu'un pour la premi√®re fois": {
            "Expressions": [
                "Metcharfin (Enchant√©)",
                "Tcharafna (Honor√© de vous rencontrer)",
                "Rabbi ysahhel (Que Dieu facilite notre rencontre)"
            ],
            "Conseil": "Accompagnez toujours d'un sourire et d'une l√©g√®re inclinaison de la t√™te"
        },
        "Demander poliment un service": {
            "Expressions": [
                "Min fadhlek (S'il vous pla√Æt)",
                "Law sma7t (Si vous permettez)",
                "3andi tlab (J'ai une demande)"
            ],
            "Conseil": "Commencez toujours par des salutations avant de faire votre demande"
        },
        "Remercier quelqu'un": {
            "Expressions": [
                "Yaichek (Merci)",
                "Barak Allahou fik (Que Dieu vous b√©nisse)",
                "Teslam (Merci beaucoup)"
            ],
            "Conseil": "Les Tunisiens appr√©cient les remerciements expressifs"
        },
        "S'excuser": {
            "Expressions": [
                "Sam7ni (Pardon)",
                "Ma3thira (Excusez-moi)",
                "Mea5ithni (Ne m'en voulez pas)"
            ],
            "Conseil": "L'humilit√© est appr√©ci√©e dans les excuses"
        },
        "Prendre cong√©": {
            "Expressions": [
                "Besslema (Au revoir)",
                "Rabbi m3ak (Que Dieu soit avec vous)",
                "Tawwa nchufek (√Ä bient√¥t)"
            ],
            "Conseil": "Ne partez jamais brusquement, prenez le temps de dire au revoir"
        }
    }
    
    # Afficher les expressions pour la situation choisie
    st.write("### üìù Expressions appropri√©es:")
    for expr in situations[situation]["Expressions"]:
        st.write(f"‚Ä¢ {expr}")
    st.info(f"üí° Conseil: {situations[situation]['Conseil']}")
    
    # Gestuelle et langage corporel
    st.write("## ü§ù Gestuelle et Langage Corporel")
    with st.expander("Voir les gestes importants"):
        st.write("""
        - **Poign√©e de main**: Ferme mais pas trop forte
        - **Distance**: Gardez une distance respectable avec le sexe oppos√©
        - **Regard**: Direct mais pas insistant
        - **Main sur le c≈ìur**: En saluant ou remerciant pour plus de sinc√©rit√©
        - **Hochement de t√™te**: Pour acquiescer respectueusement
        """)
    
    # Faux pas √† √©viter
    st.write("## ‚ö†Ô∏è Faux Pas √† √âviter")
    faux_pas = {
        "√Ä faire": [
            "Saluer avant toute conversation",
            "Utiliser les formules de respect appropri√©es",
            "Attendre d'√™tre invit√© √† s'asseoir",
            "Accepter le th√©/caf√© offert"
        ],
        "√Ä √©viter": [
            "Tutoyer les personnes √¢g√©es",
            "Interrompre une personne qui parle",
            "Refuser directement une invitation",
            "Critiquer ouvertement"
        ]
    }
    col1, col2 = st.columns(2)
    with col1:
        st.write("### ‚úÖ √Ä faire")
        for item in faux_pas["√Ä faire"]:
            st.write(f"‚Ä¢ {item}")
    with col2:
        st.write("### ‚ùå √Ä √©viter")
        for item in faux_pas["√Ä √©viter"]:
            st.write(f"‚Ä¢ {item}")
    
    # Quiz de politesse
    st.write("## üéØ Quiz de Politesse")
    if st.button("Commencer le quiz"):
        quiz_questions = [
            "Comment saluez-vous une personne √¢g√©e le matin?",
            "Quelle est la formule appropri√©e pour demander poliment?",
            "Comment remerciez-vous quelqu'un chaleureusement?",
            "Quelle expression utilisez-vous pour prendre cong√©?"
        ]
        q = random.choice(quiz_questions)
        st.write(f"Question: {q}")
        st.text_input("Votre r√©ponse:")
        r
def load_default():
    # Titre de l'application
    st.title("üë©‚Äçüè´ - La le√ßon ennuyeuse !")
    # Introduction
    st.caption("""
        Place au cour de Tunisien ü§ì, ne t'endors pas trop vite! On a mis des quizzs! """)
    st.divider()
    st.info("Ouvre la barre lat√©ral pour avoir acc√®s √† plus de cours !")    

    load_conjugaison()


# Ajout d'informations sur l'utilisation
with st.sidebar:
    st.divider()

    selected = sac.menu([
    sac.MenuItem('Le√ßons', children = [
        sac.MenuItem('Prononciation', dashed = True),
        sac.MenuItem('Conjugaison', dashed = False),
        sac.MenuItem('Pronoms personnels'),
        sac.MenuItem('Nombres'),
        sac.MenuItem('Grammaire'),
        sac.MenuItem('Vocabulaire de base'),
        sac.MenuItem('Expressions courantes'),
        sac.MenuItem('Formes de politesse')
    ])
], open_all=True)

def load_selected(selected):
    # V√©rification de l'√©l√©ment s√©lectionn√© et chargement de la le√ßon correspondante
    if selected == 'Prononciation':
        load_prononciation()
    elif selected == 'Conjugaison':
        load_conjugaison()
    elif selected == 'Pronoms personnels':
        load_pronoms_personnels()
    elif selected == 'Nombres':
        load_nombres()
    elif selected == 'Grammaire':
        load_grammaire()
    elif selected == 'Vocabulaire de base':
        load_vocabulaire_de_base()
    elif selected == 'Expressions courantes':
        load_expressions_courantes()
    elif selected == 'Formes de politesse':
        load_formes_de_politesse()
    else:
        load_default()  # Charge une page par d√©faut ou une instruction par d√©faut

load_selected(selected)








