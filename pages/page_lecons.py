import streamlit as st
import pandas as pd
import streamlit_antd_components as sac
import streamlit as st
from pages import menu_sidebar
import random
menu_sidebar.show_menu()



def load_prononciation():
    st.write("La prononciation en tunisien se distingue par des sons sp√©cifiques, comme les voyelles longues et certaines consonnes.")

def load_conjugaison():
    # Section Conjugaison
    st.write("# üìñ Conjugaison")
    st.write("""
        En tunisien, la conjugaison est souvent simplifi√©e par rapport √† l'arabe classique! 
    """)

    verbs_data = {
    'Pronom': ['Ana (Je)', 'Inti (Tu)', 'Huwa (Il)', 'Hiya (Elle)', 
            'Ahna (Nous)', 'Intouma (Vous)', 'Houma (Ils/Elles)'],
    'Manger (Yekol)': ['Nekol', 'Tekol', 'Yekol', 'Tekol', 
                    'Neklo', 'Teklo', 'Yeklo'],
    'Parler (Yahki)': ['Nahki', 'Tahki', 'Yahki', 'Tahki', 
                    'Nahkio', 'Tahkio', 'Yahkio'],
    'Faire (Y3mel)': ['N3mel', 'T3mel', 'Y3mel', 'T3mel', 
                    'N3amlo', 'T3amlo', 'Y3amlo']
    }

    
    st.dataframe(pd.DataFrame(verbs_data))
    st.write(" **Quiz Time** ")
    # Quiz conjugaison
    verbe = st.radio( 
        "Comment on √©crit 'nous mangeons' ?",
        ('Neklo', 'Tekol', 'N3mel'), index = None
    )
    
    if verbe is not None:
        if verbe == 'y3ml':
            st.success("Bonne r√©ponse ! üéâ 'y3ml' est le verbe tunisien pour 'faire'.")
        else:
            st.error("Oups, essaye encore ! üòÖ")
    
def load_pronoms_personnels():
    st.write("Les pronoms personnels en tunisien incluent : 'ana' (je), 'inta' (tu), 'houwa' (il), 'hiya' (elle), etc.")

def load_nombres():
    # Section Nombres
    st.write("# üî¢ Nombres ")
    numbers_data = {
        'Nombre': list(range(0, 11)),
        'En tunisien': ['Sfar', 'Wahed', 'Zouz', 'Tleta', 'Arba', 'Khamsa', 
                    'Setta', 'Seba', 'Tmenja', 'Tesaa', 'Achra']
    }
    
    st.dataframe(pd.DataFrame(numbers_data))
    
    st.write("**R√®gles sp√©ciales ‚ö†Ô∏è**")
    st.write("""
    - Pour 11-19: Ajoutez '-ach' au nombre de base
    - Pour les dizaines: 20 (Aachrin), 30 (Tlethin), 40 (Arbain)
    - Pour composer: 21 = Wahed w aachrin
    """)

    # Afficher un exemple de nombre
    number = st.selectbox(
        "Choisissez un nombre en tunisien :",
        ['1', '5', '10', '100']
    )

    if number == '1':
        st.write("Le nombre 1 en tunisien est 'wa7ed'.")
    elif number == '5':
        st.write("Le nombre 5 en tunisien est 'khamsa'.")
    elif number == '10':
        st.write("Le nombre 10 en tunisien est '3ashra'.")
    else:
        st.write("Le nombre 100 en tunisien est 'miya'.")

def load_grammaire():
    st.write("# üìñ Grammaire de Base du Tunisien")
    
    # Introduction
    st.write("""
    D√©couvrez les r√®gles de base de la grammaire tunisienne! 
    Le dialecte tunisien est une version simplifi√©e de l'arabe classique, 
    avec des influences du fran√ßais, de l'italien et du berb√®re.
    """)
    
    # Sections de grammaire
    sections = st.selectbox(
        "Choisissez une section :",
        ["Pronoms", "Verbes", "Formation des phrases", "N√©gation", "Questions"]
    )
    
    if sections == "Pronoms":
        st.write("## üë§ Les Pronoms Personnels")
        pronoms_data = {
            'Fran√ßais': ['Je', 'Tu (masc.)', 'Tu (f√©m.)', 'Il', 'Elle', 'Nous', 'Vous', 'Ils/Elles'],
            'Tunisien': ['Ana', 'Inti (m)', 'Inti (f)', 'Huwa', 'Hiya', '7na', 'Intuma', 'Huma'],
            'Exemple': [
                'Ana nemchi (Je vais)',
                'Inti temchi (Tu vas)',
                'Inti temchi (Tu vas)',
                'Huwa yemchi (Il va)',
                'Hiya temchi (Elle va)',
                '7na nemchiw (Nous allons)',
                'Intuma temchiw (Vous allez)',
                'Huma yemchiw (Ils/Elles vont)'
            ]
        }
        st.dataframe(pd.DataFrame(pronoms_data))
        
        st.info("""
        üí° Astuce: Contrairement au fran√ßais, en tunisien:
        - Le pronom est souvent obligatoire
        - Il existe une distinction entre tu masculin et f√©minin
        """)
        
    elif sections == "Verbes":
        st.write("## ‚ö° Les Verbes")
        
        # Temps des verbes
        st.write("### üïí Les Temps principaux")
        temps_data = {
            'Temps': ['Pr√©sent', 'Pass√©', 'Futur'],
            'Formation': [
                'Pr√©fixe n/t/y + verbe',
                'Verbe + t/it',
                'Bech + pr√©sent'
            ],
            'Exemple': [
                'nemchi (je vais)',
                'mchit (je suis all√©)',
                'bech nemchi (je vais aller)'
            ]
        }
        st.dataframe(pd.DataFrame(temps_data))
        
        # Verbes courants
        st.write("### üìù Verbes courants")
        verbes = {
            'mcha': 'aller',
            'kla': 'manger',
            'chreb': 'boire',
            'raked': 'dormir',
            '7eb': 'aimer/vouloir'
        }
        for verbe, trad in verbes.items():
            st.write(f"‚Ä¢ **{verbe}** - {trad}")
            
    elif sections == "Formation des phrases":
        st.write("## üî® Formation des Phrases")
        st.write("""
        La structure de base est : **Sujet + Verbe + Compl√©ment**
        
        Exemples:
        - Ana nemchi lel dar (Je vais √† la maison)
        - Hiya takel pizza (Elle mange une pizza)
        - 7na n7ebou el bhar (Nous aimons la mer)
        """)
        
        st.success("""
        üîë Points cl√©s:
        1. L'ordre des mots est similaire au fran√ßais
        2. Les articles sont simplifi√©s (el = le/la/les)
        3. Pas de conjugaison complexe comme en arabe classique
        """)
        
    elif sections == "N√©gation":
        st.write("## ‚ùå La N√©gation")
        st.write("""
        Pour former la n√©gation en tunisien, on utilise:
        **ma... ch** autour du verbe ou de l'adjectif
        """)
        
        negation_examples = {
            'Affirmatif': ['Nemchi', 'N7eb', 'Naaref', 'Behi'],
            'N√©gatif': ['Mamchich', 'Ma7ebch', 'Manarefch', 'Mabehi ch'],
            'Traduction': [
                'Je ne vais pas',
                'Je ne veux pas',
                'Je ne sais pas',
                'Ce n\'est pas bien'
            ]
        }
        st.dataframe(pd.DataFrame(negation_examples))
        
    else:  # Questions
        st.write("## ‚ùì Les Questions")
        st.write("### Mots interrogatifs courants:")
        
        questions_data = {
            'Tunisien': ['Chkoun?', 'Chnowa?', 'Win?', '9addech?', 'Ki/eh?', '3lech?'],
            'Fran√ßais': ['Qui?', 'Quoi?', 'O√π?', 'Combien?', 'Comment?', 'Pourquoi?'],
            'Exemple': [
                'Chkoun inti? (Qui es-tu?)',
                'Chnowa t7eb? (Que veux-tu?)',
                'Win mchit? (O√π es-tu all√©?)',
                '9addech el wa9t? (Quelle heure est-il?)',
                'Kifech inti? (Comment vas-tu?)',
                '3lech ma jitch? (Pourquoi n\'es-tu pas venu?)'
            ]
        }
        st.dataframe(pd.DataFrame(questions_data))
    
    # Section pratique interactive
    st.write("## üéØ Pratiquons!")
    
    # Mini exercice selon la section
    st.write("### ‚úçÔ∏è Exercice")
    if st.button("G√©n√©rer un exercice"):
        exercices = {
            "Pronoms": [
                "Traduisez: Je suis fatigu√©",
                "Comment dire: Nous allons au march√©",
                "Conjuguez: √™tre content (fer7an) avec tous les pronoms"
            ],
            "Verbes": [
                "Conjuguez 'mcha' au pr√©sent",
                "Mettez 'kla' au futur",
                "Donnez le pass√© de '7eb'"
            ],
            "Formation des phrases": [
                "Formez une phrase avec: dar (maison) + kbira (grande)",
                "Traduisez: Le chat dort dans le jardin",
                "Cr√©ez une phrase avec: ana + 7eb + mchi"
            ],
            "N√©gation": [
                "Mettez √† la forme n√©gative: 'Ana n7eb el birra'",
                "Comment dire: Je ne veux pas dormir",
                "Niez la phrase: 'El jow behi'"
            ],
            "Questions": [
                "Posez une question sur l'heure",
                "Demandez 'o√π habites-tu?'",
                "Formez une question avec 'chkoun'"
            ]
        }
        st.write(random.choice(exercices[sections]))
        
    # Astuces culturelles
    st.write("## üé≠ Note culturelle")
    cultural_notes = {
        "Pronoms": "Le vouvoiement est moins utilis√© qu'en fran√ßais, mais reste important avec les personnes √¢g√©es.",
        "Verbes": "Les Tunisiens m√©langent souvent des verbes fran√ßais tunisifi√©s dans leurs phrases.",
        "Formation des phrases": "Le tunisien est tr√®s expressif, n'h√©sitez pas √† utiliser des gestes!",
        "N√©gation": "La n√©gation peut √™tre renforc√©e avec 'khaled' pour dire 'pas du tout'.",
        "Questions": "L'intonation est tr√®s importante dans les questions tunisiennes."
    }
    st.info(cultural_notes[sections])

def load_vocabulaire_de_base():
    # Section Vocabulaire de Base
    st.write("# üìö Vocabulaire de Base")
    st.write("**üìÖ Tableau r√©capitulatif**")
    # Cr√©ation du dictionnaire de vocabulaire
    vocab_data = {
        'Fran√ßais': [
            'Bonjour', 
            'Au revoir', 
            'Comment √ßa va?',
            'Merci',
            'S\'il vous pla√Æt',
            'Oui',
            'Non',
            'Je m\'appelle...',
            'Enchant√©(e)',
            'Je ne comprends pas'
        ],
        'Tunisien': [
            'Aslema',
            'Besslema',
            'Chneya 7welek?',
            'Yaichek',
            'Min fadhlek',
            'Ih',
            'Le',
            'Ismi...',
            'Metcharfin',
            'Manefhemch'
        ],
        'Prononciation': [
            'As-le-ma',
            'Bes-le-ma',
            'Shney-ya hwel-ek',
            'Yai-chek',
            'Min fadh-lek',
            'Ih',
            'Le',
            'Is-mi',
            'Met-char-fin',
            'Ma-nef-hemch'
        ]
    }
    
    # Affichage du tableau de vocabulaire
    st.dataframe(pd.DataFrame(vocab_data))
    
    # Section des r√®gles de base
    st.write("**üìù R√®gles de base**")
    st.write("""
    - Le dialecte tunisien utilise souvent des sons qui n'existent pas en fran√ßais
    - Les chiffres sont parfois utilis√©s pour repr√©senter des sons particuliers:
        * 7 = son 'H' fort
        * 3 = son 'A' guttural
        * 9 = son 'Q' guttural
    """)
    
    # Section interactive
    categorie = st.selectbox(
        "Choisissez une cat√©gorie de phrases :",
        ['Salutations', 'Expressions courantes', 'Questions basiques']
    )
    
    if categorie == 'Salutations':
        st.write("""
        üåÖ **Le matin:** "Sbe7 el khir" (Bonjour)
        üåô **Le soir:** "Mse el khir" (Bonsoir)
        """)
    elif categorie == 'Expressions courantes':
        st.write("""
        üëç **D'accord:** "Mriguel"
        üòä **Tr√®s bien:** "Behi barcha"
        üôè **De rien:** "L√© chwey"
        """)
    else:
        st.write("""
        ü§î **O√π est...?:** "Win...?"
        üí∞ **Combien √ßa co√ªte?:** "9addech?"
        üïí **Quelle heure est-il?:** "9addech fel wa9t?"
        """)
    
    # Astuce du jour
    st.write("üí° **Astuce du jour**")
    st.info("""
    En tunisien, on ajoute souvent 'ch' √† la fin des verbes pour les rendre n√©gatifs.
    Exemple: 
    - "Nefhem" (Je comprends) 
    - "Manefhemch" (Je ne comprends pas)
    """)


def load_expressions_courantes():
    st.write("# üéØ Expressions Courantes")
    
    # Introduction amusante
    st.write("""
    D√©couvrez les expressions qui vous feront parler comme un vrai Tunisien! 
    Ces phrases sont utilis√©es quotidiennement dans les rues de Tunis, Sfax, ou Sousse üáπüá≥
    """)
    
    # Sections d'expressions par cat√©gorie
    categories = {
        "üòä Expressions positives": {
            "3aslema": "Tout va bien (litt√©ralement: c'est du miel)",
            "Mabrouk": "F√©licitations",
            "3ala rouhek": "Tu es g√©nial (litt√©ralement: sur ton √¢me)",
            "Taw taw": "D'accord, tout de suite!",
            "Mriguel": "C'est cool, √ßa roule"
        },
        "üò§ Expressions d'agacement": {
            "Ya hasra": "Quel dommage!",
            "Yezi barka": "Arr√™te, √ßa suffit!",
            "Ya latif": "Oh mon Dieu! (expression d'exasp√©ration)",
            "Mela aya": "Alors quoi encore?",
            "Chnoua hedha": "C'est quoi ce truc?"
        },
        "ü§£ Expressions dr√¥les": {
            "Mahlek": "Que tu es beau/belle! (avec ironie possible)",
            "Sahbi rabbi yehfdek": "Mon ami que Dieu te prot√®ge (utilis√© pour tout et n'importe quoi)",
            "Weldek ma3adech yekber": "Ton fils ne grandira plus (quand quelqu'un fait quelque chose de bien)",
            "3andek chwaya mokh?": "As-tu un peu de cerveau? (gentille moquerie)",
            "Wallah la3dhim": "Je te jure! (utilis√© m√™me pour les plus petites choses)"
        }
    }
    
    # S√©lection de cat√©gorie interactive
    category = st.selectbox("Choisissez une cat√©gorie:", list(categories.keys()))
    
    # Affichage des expressions de la cat√©gorie s√©lectionn√©e
    selected_expressions = categories[category]
    expressions_df = pd.DataFrame({
        'Expression': list(selected_expressions.keys()),
        'Signification': list(selected_expressions.values())
    })
    st.dataframe(expressions_df)
    
    # Section interactive - Testez vos connaissances
    st.write("## üéÆ Testez vos connaissances!")
    
    # Quiz simple
    quiz_expression = st.selectbox(
        "Que signifie cette expression?",
        list(selected_expressions.keys())
    )
    
    if st.button("Voir la r√©ponse"):
        st.success(f"üéâ R√©ponse: {selected_expressions[quiz_expression]}")
    
    # Section des situations courantes
    st.write("## üé≠ Situations courantes")
    situations = {
        "Au caf√©": [
            "3andi kahwa bel 7lib - Un caf√© au lait s'il vous pla√Æt",
            "Zidli chwaya sukkar - Ajoutez-moi un peu de sucre",
            "9addech? - C'est combien?"
        ],
        "Au march√©": [
            "Ghali barcha! - C'est trop cher!",
            "Na9es chwaya - Baisse un peu le prix",
            "Aka7el 3liya - Fais-moi un bon prix"
        ],
        "Entre amis": [
            "Nemchiw nel3bou ballon? - On va jouer au foot?",
            "Tji tel3ab m3ana? - Tu viens jouer avec nous?",
            "Chbik mafamech? - Pourquoi tu n'es pas venu?"
        ]
    }
    
    situation = st.selectbox("Choisissez une situation:", list(situations.keys()))
    for phrase in situations[situation]:
        st.write(f"‚Ä¢ {phrase}")
    
    # Conseils d'utilisation
    st.write("## üí° Conseils d'utilisation")
    st.info("""
    - Les expressions tunisiennes sont tr√®s contextuelles
    - Le ton est aussi important que les mots
    - N'h√©sitez pas √† utiliser les gestes pour accompagner vos expressions
    - Les Tunisiens appr√©cient beaucoup quand les √©trangers essaient de parler leur dialecte!
    """)
    
    # Easter Egg
    if st.button("üéÅ D√©couvrez une expression secr√®te!"):
        expressions_secretes = [
            "Chkoun ya7ki 3lik? - Qui parle de toi? (Quand quelqu'un √©ternue)",
            "3andek fil ! - Tu as un √©l√©phant! (Quand quelqu'un a de la chance)",
            "Koul 3am w inti b'khir - Que chaque ann√©e te trouve en bonne sant√©",
            "Saret sa3a - √áa fait une heure! (M√™me si √ßa fait 5 minutes)"
        ]
        st.success(random.choice(expressions_secretes))
    
    # Niveau de ma√Ætrise
    st.write("## üìä √âvaluez votre niveau")
    niveau = st.slider("Combien d'expressions connaissez-vous?", 0, 20)
    
    if niveau < 5:
        st.write("üå± D√©butant - Continuez √† pratiquer!")
    elif niveau < 10:
        st.write("üåø Interm√©diaire - Vous commencez √† bien vous d√©brouiller!")
    elif niveau < 15:
        st.write("üå≥ Avanc√© - Presque un Tunisien!")
    else:
        st.write("üé≠ Expert - Vous √™tes un vrai Tunisien maintenant!")
def load_formes_de_politesse():
    st.write("Les formes de politesse incluent des expressions comme : 'afek' (s'il te pla√Æt), 'barakallah fik' (merci beaucoup).")

def load_default():
    # Titre de l'application
    st.title("üë©‚Äçüè´ - La le√ßon ennuyeuse !")
    # Introduction
    st.caption("""
        Place au cour de Tunisien ü§ì, ne t'endors pas trop vite! On a mis des quizzs! """)

    st.divider()

    load_conjugaison()


# Ajout d'informations sur l'utilisation
with st.sidebar:
    st.divider()

    selected = sac.menu([
    sac.MenuItem('Le√ßons', children = [
        sac.MenuItem('Prononciation', dashed = True),
        sac.MenuItem('Conjugaison', dashed = False),
        sac.MenuItem('Pronoms personnels'),
        sac.MenuItem('Nombres'),
        sac.MenuItem('Grammaire'),
        sac.MenuItem('Vocabulaire de base'),
        sac.MenuItem('Expressions courantes'),
        sac.MenuItem('Formes de politesse')
    ])
], open_all=True)


# V√©rification de l'√©l√©ment s√©lectionn√© et chargement de la le√ßon correspondante
if selected == 'Prononciation':
    load_prononciation()
elif selected == 'Conjugaison':
    load_conjugaison()
elif selected == 'Pronoms personnels':
    load_pronoms_personnels()
elif selected == 'Nombres':
    load_nombres()
elif selected == 'Grammaire':
    load_grammaire()
elif selected == 'Vocabulaire de base':
    load_vocabulaire_de_base()
elif selected == 'Expressions courantes':
    load_expressions_courantes()
elif selected == 'Formes de politesse':
    load_formes_de_politesse()
else:
    load_default()  # Charge une page par d√©faut ou une instruction par d√©faut










